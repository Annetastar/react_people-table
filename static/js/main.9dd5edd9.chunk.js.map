{"version":3,"sources":["Api.js","components/Person/Person.js","components/PersonTable/PersonTable.js","App.js","index.js"],"names":["getPeopleFromApi","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","fetch","sent","abrupt","json","stop","apply","this","arguments","Person","_this$props","props","_this$props$person","person","id","name","sex","age","born","died","century","father","mother","children","onClick","selectedId","react_default","createElement","active","data-person-id","className","map","child","index","length","concat","React","Component","PersonTable","state","personIdSelect","selectPerson","event","_this","setState","currentTarget","dataset","personId","_this2","people","components_Person_Person","key","Math","random","App","filterOfPeople","sortValue","filterOfValue","getFilterFromPeople","createSelector","filterQuery","sortQuery","filter","toLowerCase","includes","toConsumableArray","sort","b","localeCompare","loadData","mapPeople","_objectSpread","ceil","handlerFilterValue","target","value","handlerSortValue","textContent","dataResult","Fragment","placeholder","onChange","type","components_PersonTable_PersonTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.9dd5edd9.chunk.js","sourcesContent":["export const getPeopleFromApi = async() => {\n  const response = await fetch('https://mate-academy.github.io/react_people-table/api/people.json');\n  return response.json();\n};\n","import React from 'react';\n\nclass Person extends React.Component {\n\n  render() {\n    const { person: { id, name, sex, age, born, died, century, father, mother, children },\n      onClick, selectedId } = this.props;\n\n    return (\n      <tr\n        active={selectedId === id}\n        onClick={onClick}\n        data-person-id={id}\n      >\n        <td>{id}</td>\n        <td className={born < 1650 ? 'bornBefore1650' : null}>\n          {name}\n        </td>\n        <td>\n          {sex === 'f' ? <span>&#x2640;</span> : <span>&#x2642;</span>}\n        </td>\n        <td className={age >= 65 ? 'ageAfter65' : null}>\n          {age}\n        </td>\n        <td>{born}</td>\n        <td>{died}</td>\n        <td>{century}</td>\n        <td>{mother}</td>\n        <td>{father}</td>\n        <td>\n          {children.map((child, index) => children.length - 1 !== index ? `${child.name}, ` : child.name)}\n        </td>\n      </tr>\n    );\n  }\n}\n\nexport default Person;\n","import React from 'react';\nimport Person from '../Person/Person';\n\nclass PersonTable extends React.Component {\n  state = {\n    personIdSelect: null,\n  };\n\n  selectPerson = (event) => {\n    this.setState({\n      personIdSelect: +event.currentTarget.dataset.personId,\n    });\n  };\n\n  render() {\n    const { people } = this.props;\n    const { personIdSelect } = this.state;\n\n    return (\n      <table className=\"table\">\n        <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Age</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Century</th>\n          <th>Mother</th>\n          <th>Father</th>\n          <th>Children</th>\n        </tr>\n        </thead>\n        <tbody>\n        {people.map((person, index) => (\n          <Person\n            key={Math.random()}\n            person={person}\n            personId={index + 1}\n            onClick={this.selectPerson}\n            selectedId={personIdSelect}\n          />\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default PersonTable;\n","import React from 'react';\nimport {getPeopleFromApi} from './Api';\nimport PersonTable from './components/PersonTable/PersonTable';\nimport { createSelector } from 'reselect';\n\nclass App extends React.Component {\n  state = {\n    people: [],\n    filterOfPeople: [],\n    sortValue: null,\n    filterOfValue: '',\n  };\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  getFilterFromPeople = createSelector(\n    [\n      state => state.people,\n      state => state.filterOfValue,\n      state => state.sortValue,\n    ],\n    (people, filterQuery, sortQuery) => {\n      const filterOfPeople = people.filter(person =>\n        person.name.toLowerCase().includes(filterQuery.toLowerCase())\n        || person.mother.toLowerCase().includes(filterQuery.toLowerCase())\n        || person.father.toLowerCase().includes(filterQuery.toLowerCase()));\n\n      switch (sortQuery) {\n        case 'id':\n          return [...filterOfPeople].sort((a, b) => a.id - b.id);\n        case 'name':\n          return [...filterOfPeople].sort((a, b) => a.name.localeCompare(b.name));\n        case 'sex':\n          return [...filterOfPeople].sort((a, b) => a.sex.localeCompare(b.sex));\n        case 'age':\n          return [...filterOfPeople].sort((a, b) => a.age - b.age);\n        case 'born':\n          return [...filterOfPeople].sort((a, b) => a.born - b.born);\n        case 'died':\n          return [...filterOfPeople].sort((a, b) => a.died - b.died);\n        case 'century':\n          return [...filterOfPeople].sort((a, b) => a.century - b.century);\n        default:\n          return filterOfPeople;\n      }\n    }\n  );\n\n  loadData = async () => {\n    const people = await getPeopleFromApi();\n    const mapPeople = people.map((person, index) => ({\n      ...person,\n      id: index + 1,\n      age: person.died - person.born,\n      century: Math.ceil(person.died / 100),\n      father: person.father ? person.father : '',\n      mother: person.mother ? person.mother : '',\n      children: people.filter(child => child.father === person.name || child.mother === person.name),\n    }));\n\n    this.setState({\n      people: mapPeople,\n      filterOfPeople: mapPeople,\n    });\n  };\n\n  handlerFilterValue = (event) => {\n    this.setState({\n      filterOfValue: event.target.value,\n    });\n  };\n\n  handlerSortValue = (event) => {\n    this.setState({\n      sortValue: event.target.textContent,\n    });\n  };\n\n  render() {\n    const { filterOfValue } = this.state;\n    const dataResult = this.getFilterFromPeople(this.state);\n\n    return (\n      <>\n        <div className=\"main-input\">\n          <input\n            className=\"item\"\n            placeholder=\"Keyboard name\"\n            value={filterOfValue}\n            onChange={this.handlerFilterValue}\n          />\n        </div>\n        <h2>Filter by:</h2>\n        <div className=\"main_buttons\">\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Id\n          </button>\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Name\n          </button>\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Sex\n          </button>\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Age\n          </button>\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Born\n          </button>\n          <button\n            onClick={this.handlerSortValue}\n            type='submit'>\n            Century\n          </button>\n        </div>\n        <PersonTable people={dataResult} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App test={123} />, document.getElementById('root'));\n"],"sourceRoot":""}